version: '3.2'
services:

  addresses:
    container_name: addresses
    image: bazel/backend/services/addresses:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      ADDRESSES_PORT: '${ADDRESSES_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${ADDRESSES_PORT}:${ADDRESSES_PORT}'
    networks:
    - mainnet

  admins:
    container_name: admins
    image: bazel/backend/services/admins:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      ADMINS_PORT: '${ADMINS_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${ADMINS_PORT}:${ADMINS_PORT}'
    networks:
    - mainnet

  auth:
    container_name: auth
    image: bazel/backend/services/auth:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      AUTH_PORT: '${AUTH_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${AUTH_PORT}:${AUTH_PORT}'
    networks:
    - mainnet

  deliveries:
    container_name: deliveries
    image: bazel/backend/services/deliveries:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      DELIVERIES_PORT: '${DELIVERIES_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${DELIVERIES_PORT}:${DELIVERIES_PORT}'
    networks:
    - mainnet

  drivers:
    container_name: drivers
    image: bazel/backend/services/drivers:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      DRIVERS_PORT: '${DRIVERS_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${DRIVERS_PORT}:${DRIVERS_PORT}'
    networks:
    - mainnet

  managers:
    container_name: managers
    image: bazel/backend/services/managers:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      MANAGERS_PORT: '${MANAGERS_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${MANAGERS_PORT}:${MANAGERS_PORT}'
    networks:
    - mainnet

  vehicles:
    container_name: vehicles
    image: bazel/backend/services/vehicles:docker
    environment:
      PG_CONNECTION_STRING: '${PG_CONNECTION_STRING}'
      VEHICLES_PORT: '${VEHICLES_PORT}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
    ports:
    - '${VEHICLES_PORT}:${VEHICLES_PORT}'
    networks:
    - mainnet

  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: '${PG_PORT}'
      POSTGRES_USER: '${PG_USER}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
      POSTGRES_DB: '${PG_DB}'
    ports:
    - "${PG_PORT}:${PG_PORT}"
    volumes:
    - '${PWD}/backend/database:/database'
    - '${PWD}/backend/database/postgres:/var/lib/postgresql/data'
    networks:
    - mainnet

networks:
  mainnet:
    driver: bridge
